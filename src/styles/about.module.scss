// Container for the about section
.container {
  width: 100%;
  max-width: 1100px;
  margin: 0 auto;
  padding: 0 1rem; // Add padding for mobile screens
}

// Title styling for the about section
.aboutTitle {
  font-size: clamp(1.5rem, 5vw, 1.8rem); // Responsive font size
  margin-bottom: 1.2rem;
  color: white;
  position: relative;

  // Underline effect for the title
  &:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -0.4rem;
    width: 40px;
    height: 2px;
    background-color: rgba(200, 200, 255, 0.7);
  }
}

// Grid layout for the cards
.cardGrid {
  display: grid;
  grid-template-columns: 1fr; // Default to single column for mobile
  gap: 1rem; // Slightly increased gap for better mobile separation
}

// Styling for individual cards
.card {
  background-color: rgba(20, 20, 40, 0.3);
  border-radius: 8px;
  padding: 1rem;
  border: 1px solid rgba(200, 200, 255, 0.2);
  transition: all 0.3s ease;
  color: white;
  height: 100%;
  margin-bottom: 0; // Remove margin-bottom entirely - use grid gap instead

  // Hover and active states for touch devices
  &:hover, &:active {
    transform: translateY(-2px);
    border-color: rgba(200, 200, 255, 0.4);
  }

  // Make single cards span all columns
  &:only-child {
    grid-column: 1 / -1;
  }
}

// When there are exactly 2 cards in the grid
.cardGrid:has(.card:first-child:nth-last-child(2)),
.cardGrid:has(.card:first-child:nth-last-child(2) ~ .card) {
  .card {
    grid-column: span 1; // Default single column on mobile
  }
}

// Title styling for the cards
.cardTitle {
  font-size: 1.1rem; // Slightly reduced for mobile
  color: rgba(200, 200, 255, 0.9);
  margin-bottom: 0.6rem;
}

// Styling for the skills list
.skillsList {
  list-style-type: none;
  padding: 0;
  margin: 0;
  color: rgba(255, 255, 255, 0.85);

  li {
    position: relative;
    padding: 0.15rem 0 0.15rem 1rem;
    font-size: 0.9rem; // Slightly smaller for mobile
    line-height: 1.5; // Improved line height for better readability on mobile

    // Bullet point for the list items
    &:before {
      content: "â€¢";
      color: rgba(200, 200, 255, 0.7);
      position: absolute;
      left: 0;
    }
  }
}

// Highlighted text styling
.highlight {
  color: rgba(200, 200, 255, 0.9);
  font-weight: 600;
}

// Separator styling (hidden by default)
.separator {
  display: none;
}

// Styling for the experience text container
.experienceText {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.5rem;
  width: 100%;
}

// Styling for individual experience items
.experienceItem {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: wrap; // Allow wrapping on small screens
}

// Compact text styling
.compactText {
  font-size: 0.9rem; // Slightly smaller for mobile
  line-height: 1.5; // Improved line height for readability
}

// Very small screens (300px+) - Support for older/smaller phones
@media (min-width: 300px) {
  .container {
    padding: 0; // Add back horizontal padding to prevent edge overlap
    max-width: 100%; // Ensure full width usage
  }

  .aboutTitle {
    font-size: clamp(1.2rem, 6vw, 1.5rem); // Smaller range for very small screens
    margin-bottom: 1rem;
    
    &:after {
      width: 30px; // Smaller underline
    }
  }

  .cardGrid {
    gap: 3rem; // Reduced gap for tighter spacing
    grid-template-columns: 1fr; // Single column for very small screens
  }

  .card {
    padding: 0.75rem; // Reduced padding
    margin: 0.75rem;
    border-radius: 6px; // Slightly smaller border radius
  }

  .cardTitle {
    font-size: 1rem; // Smaller title for very small screens
    margin-bottom: 0.5rem;
  }

  .skillsList li {
    font-size: 0.85rem; // Smaller text for better fit
    padding: 0.1rem 0 0.1rem 0.85rem; // Reduced padding
  }

  .experienceText {
    gap: 0.4rem; // Tighter spacing
  }

  .experienceItem {
    gap: 0.4rem; // Reduced gap between items
  }

  .compactText {
    font-size: 0.85rem; // Smaller text for very small screens
    line-height: 1.4; // Slightly tighter line height
  }
}

// Small screens and up (480px+)
@media (min-width: 480px) {
  .container {
    padding: 0;
  }

  .aboutTitle {
    margin-bottom: 1.4rem; // Increased margin
  }

  .card {
    margin-bottom: 0; // Remove margin-bottom to rely on grid gap
  }

  .cardTitle {
    font-size: 1.12rem; // Slightly increased
  }

  .skillsList li {
    font-size: 0.92rem; // Slightly increased
  }

  .compactText {
    font-size: 0.92rem; // Slightly increased
  }
}

// Medium screens (tablets)
@media (min-width: 600px) {
  .cardGrid {
    grid-template-columns: repeat(2, 1fr); // Two columns for medium screens
  }

  // When exactly 2 cards
  .cardGrid:has(.card:first-child:nth-last-child(2)),
  .cardGrid:has(.card:first-child:nth-last-child(2) ~ .card) {
    .card {
      grid-column: span 1; // Each card takes half width
    }
  }
}

// Media query for screens between 769px and 1100px
@media (min-width: 769px) and (max-width: 1100px) {
  .container {
    padding: 0 1.5rem; // Increased padding
  }

  .cardGrid {
    grid-template-columns: repeat(2, 1fr); // Two columns
    gap: 3rem; // Maintain gap
  }

  .card {
    margin-bottom: 0; // Remove extra margin
  }

  // When exactly 2 cards
  .cardGrid:has(.card:first-child:nth-last-child(2)),
  .cardGrid:has(.card:first-child:nth-last-child(2) ~ .card) {
    .card {
      grid-column: span 1; // Each card takes half width
    }
  }

  .cardTitle {
    font-size: 1.05rem; // Original size
  }

  .skillsList li {
    font-size: 0.95rem; // Original size
  }

  .compactText {
    font-size: 0.95rem; // Original size
  }
}

// Large screens (desktop)
@media (min-width: 1101px) {
  .container {
    padding: 0; // Remove padding for large screens
  }

  .aboutTitle {
    font-size: 1.8rem; // Original desktop size
  }

  .cardGrid {
    grid-template-columns: repeat(3, 1fr); // Original three columns
    gap: 0.8rem; // Original gap
  }

  .card {
    margin-bottom: 0; // Remove extra margin
  }

  .cardTitle {
    font-size: 1.15rem; // Original size
  }

  // When exactly 2 cards in desktop
  .cardGrid:has(.card:first-child:nth-last-child(2)),
  .cardGrid:has(.card:first-child:nth-last-child(2) ~ .card) {
    .card {
      grid-column: span 3 / span 3; // Original full width
    }
  }

  .experienceItem {
    flex-wrap: nowrap; // No wrapping on desktop
  }
}